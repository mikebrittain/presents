diff --git a/logster_helper.py b/logster_helper.py
index 54c9117..4445803 100644
--- a/logster_helper.py
+++ b/logster_helper.py
@@ -20,6 +20,7 @@
 ###
 
 from time import time
+import math
 
 class MetricObject(object):
     """General representation of a metric that can be used in many contexts"""
@@ -52,4 +53,24 @@ class LockingError(Exception):
     def __init__(self, message):
         self.message = message
 
+# Percentile calculation from http://code.activestate.com/recipes/511478/ (r1)
+def percentile(N, percent, key=lambda x:x):
+    """
+    Find the percentile of a list of values.
 
+    @parameter N - is a list of values. Note N MUST BE already sorted.
+    @parameter percent - a float value from 0.0 to 1.0.
+    @parameter key - optional key function to compute value from each element of N.
+
+    @return - the percentile of the values
+    """
+    if not N:
+        return None
+    k = (len(N)-1) * percent
+    f = math.floor(k)
+    c = math.ceil(k)
+    if f == c:
+        return key(N[int(k)])
+    d0 = key(N[int(f)]) * (c-k)
+    d1 = key(N[int(c)]) * (k-f)
+    return d0+d1
